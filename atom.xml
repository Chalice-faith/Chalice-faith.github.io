<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chalice的个人博客</title>
  
  
  <link href="https://github.com/Chalice-faith/atom.xml" rel="self"/>
  
  <link href="https://github.com/Chalice-faith/"/>
  <updated>2025-09-22T14:42:11.364Z</updated>
  <id>https://github.com/Chalice-faith/</id>
  
  <author>
    <name>Chalice</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo博客的搭建</title>
    <link href="https://github.com/Chalice-faith/2025/09/22/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://github.com/Chalice-faith/2025/09/22/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</id>
    <published>2025-09-22T14:41:46.000Z</published>
    <updated>2025-09-22T14:42:11.364Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本地搭建"><a href="#本地搭建" class="headerlink" title="本地搭建"></a>本地搭建</h1><h2 id="1-本地搭建-Hexo-博客"><a href="#1-本地搭建-Hexo-博客" class="headerlink" title="1. 本地搭建 Hexo 博客"></a>1. 本地搭建 Hexo 博客</h2><ul><li>全局安装 hexo 脚手架</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><ul><li>新建文件夹 blog，利用脚手架生成博客工程</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><ul><li>安装依赖，运行项目</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>之后，访问 localhost:4000 就能看到我们的博客。</p><p>到目前为止，我们的简易博客就搭建完成了，但是整个博客功能比较简单，我们再来了解一下其他的个性化配置。</p><h2 id="2-个性化配置"><a href="#2-个性化配置" class="headerlink" title="2. 个性化配置"></a>2. 个性化配置</h2><h3 id="2-1-更换主题"><a href="#2-1-更换主题" class="headerlink" title="2.1 更换主题"></a>2.1 更换主题</h3><p>Hexo 主题列表可以在官方查找 <a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>也可以在 github 上查找 <a href="https://github.com/search?q=hexo-theme">https://github.com/search?q=hexo-theme</a></p><h4 id="推荐几个优秀主题"><a href="#推荐几个优秀主题" class="headerlink" title="推荐几个优秀主题"></a>推荐几个优秀主题</h4><table><thead><tr><th><strong>主题</strong></th><th><strong>github地址</strong></th><th><strong>简介</strong></th><th>github star（25.1）</th></tr></thead><tbody><tr><td>NexT</td><td><a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></td><td>NexT 是 Hexo 最受欢迎的主题之一，设计简洁且功能强大</td><td>8.2k</td></tr><tr><td>Butterfly</td><td><a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a></td><td>Butterfly 是一个优雅且高度可定制的主题，适合个人博客</td><td>7.4k</td></tr><tr><td>Matery</td><td><a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></td><td>Matery 是一个 Material Design 风格的主题，适合技术博客</td><td>5.3k</td></tr><tr><td>Yilia</td><td><a href="https://github.com/litten/hexo-theme-yilia">https://github.com/litten/hexo-theme-yilia</a></td><td>Yilia 是一个简洁且响应式的主题，适合写作和阅读</td><td>8.4k</td></tr><tr><td>Icarus</td><td><a href="https://github.com/ppoffice/hexo-theme-icarus">https://github.com/ppoffice/hexo-theme-icarus</a></td><td>Icarus 是一个现代化的主题，支持多种插件和自定义配置</td><td>6.4k</td></tr></tbody></table><h4 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h4><p>以 NexT 主题为例，安装步骤如下：</p><ol><li><strong>下载主题</strong>：</li></ol><p>在博客根目录下运行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><ol><li><strong>启用主题</strong>：</li></ol><p>编辑博客根目录下的 <code>_config.yml</code> 文件，修改 <code>theme</code> 字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><ol><li><strong>配置主题</strong>：</li></ol><p>根据需要编辑主题配置文件（通常是 <code>themes/next/_config.yml</code>）。NexT提供了三种不同的外观，可以挑选一个自己喜欢的，然后去掉其中一个的 # 号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure><ol><li><strong>重新生成并部署</strong>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 清除缓存</span><br><span class="line">hexo clean</span><br><span class="line"># 生成主题静态文件</span><br><span class="line">hexo generate</span><br><span class="line"># 启动服务</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h3 id="2-2-更新博客基础信息"><a href="#2-2-更新博客基础信息" class="headerlink" title="2.2 更新博客基础信息"></a>2.2 更新博客基础信息</h3><p>博客基础信息可以在根目录的 <code>_config.yml</code> 文件配置，以本博客为例，更改如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: webfem</span><br><span class="line">subtitle: &#x27;&#x27;</span><br><span class="line">description: 做有价值的博客</span><br><span class="line">keywords: 前端</span><br><span class="line">author: space</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone: &#x27;&#x27;</span><br></pre></td></tr></table></figure><h3 id="2-3-首页文章截断"><a href="#2-3-首页文章截断" class="headerlink" title="2.3 首页文章截断"></a>2.3 首页文章截断</h3><ol><li>每次写文章正文时，只需要在文章 .md 中需要截断的地方增加：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><ol><li>打开 <code>/themes/next/_config.yml</code>，修改 <code>scroll_to_more</code> 这个选项设置为 <code>false</code> 。</li></ol><p><img src="https://cdn.webfem.com/webfem/cfc4f7b0-d191-11ef-aad8-11241f379ea9" alt="替换hexo的next主题.png"></p><h3 id="2-4-修改博客-icon"><a href="#2-4-修改博客-icon" class="headerlink" title="2.4 修改博客 icon"></a>2.4 修改博客 icon</h3><p>浏览器左上角icon修改</p><ol><li>在 <code>/source</code> 目录下新建一个名为 <code>uploads</code> 的文件夹，将头像图片（如 <code>favicon.png</code>）放入该文件夹中。</li><li>打开主题的配置文件（通常是 <code>/themes/next/_config.yml</code>），找到 <code>favicon</code> 相关字段，修改为你的图标文件路径。例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /uploads/favicon.png  # 小图标（16x16）</span><br><span class="line">  medium: /uploads/favicon.png  # 中图标（32x32）</span><br><span class="line">  apple_touch_icon: /uploads/favicon.png  # Apple 设备图标</span><br><span class="line">  safari_pinned_tab: /uploads/favicon.png  # Safari 固定标签页图标</span><br></pre></td></tr></table></figure><h2 id="3-修改导航"><a href="#3-修改导航" class="headerlink" title="3. 修改导航"></a>3. 修改导航</h2><p>页面的导航需要到具体的主题目录去修改，以next为例，需要到 &#x2F;themes&#x2F;next&#x2F;_config.yml文件，将menu字段修改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br></pre></td></tr></table></figure><p>修改之后，我们还没有这个页面，需要手动加几个页面</p><h3 id="3-1-创建分类页面"><a href="#3-1-创建分类页面" class="headerlink" title="3.1 创建分类页面"></a>3.1 创建分类页面</h3><ol><li>使用以下命令新建一个名为 <code>categories</code> 的页面：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><ol><li>编辑刚创建的页面文件 <code>/source/categories/index.md</code>，将页面类型设置为 <code>categories</code>。这样，主题会自动在该页面显示所有分类。注意保留冒号后的空格。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Categories</span><br><span class="line">date: 2024-04-10 23:40:31</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="3-2-创建标签云页面"><a href="#3-2-创建标签云页面" class="headerlink" title="3.2 创建标签云页面"></a>3.2 创建标签云页面</h3><ol><li>使用以下命令新建一个名为 <code>tags</code> 的页面：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure><ol><li>编辑刚创建的页面文件，将页面类型设置为 <code>tags</code>。这样，主题会自动在该页面显示标签云。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tags</span><br><span class="line">date: 2024-04-10 23:41:25</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><hr><h3 id="3-3-创建“关于我”页面"><a href="#3-3-创建“关于我”页面" class="headerlink" title="3.3 创建“关于我”页面"></a>3.3 创建“关于我”页面</h3><ol><li>使用以下命令新建一个名为 <code>about</code> 的页面：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><ol><li>编辑刚创建的页面文件，可以在正文部分使用 Markdown 格式写下你的个人信息。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: About</span><br><span class="line">date: 2024-04-10 23:41:56</span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">这是我博客的内容，欢迎阅读！</span><br></pre></td></tr></table></figure><p>修改之后效果如下：</p><p><img src="https://cdn.webfem.com/webfem/69b69ae0-d192-11ef-aad8-11241f379ea9" alt="hexo-category.png"></p><h2 id="4-创建并编辑文章"><a href="#4-创建并编辑文章" class="headerlink" title="4. 创建并编辑文章"></a>4. 创建并编辑文章</h2><ol><li>在博客根目录下执行以下命令，创建一篇新文章：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;我的第一篇文章&quot;</span><br></pre></td></tr></table></figure><p>这会在 <code>source/_posts</code> 文件夹内生成一个 <code>.md</code> 文件。</p><ol><li>编辑该文件，修改起始字段如下：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章的标题</span><br><span class="line">date: 创建日期 （文件的创建日期）</span><br><span class="line">updated: 修改日期 （文件的修改日期）</span><br><span class="line">comments: true  # 是否开启评论</span><br><span class="line">tags:</span><br><span class="line">  - 标签1</span><br><span class="line">  - 标签2</span><br><span class="line">categories:</span><br><span class="line">  - 分类1</span><br><span class="line">permalink: url中的名字（文件名）</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ol><li><p>在 <code>---</code> 下方编写正文内容，遵循 Markdown 语法规则。</p></li><li><p>生成静态资源</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>将 hello-word.md 的内容复制过来，效果如下</p><p><img src="https://cdn.webfem.com/webfem/643af2f0-d192-11ef-aad8-11241f379ea9" alt="hexo-blog.png"></p><h2 id="5-设置侧边栏"><a href="#5-设置侧边栏" class="headerlink" title="5. 设置侧边栏"></a>5. 设置侧边栏</h2><p>默认侧边栏非常简陋，需要再额外配置一下</p><h3 id="5-1-设置侧边栏头像"><a href="#5-1-设置侧边栏头像" class="headerlink" title="5.1 设置侧边栏头像"></a>5.1 设置侧边栏头像</h3><ol><li>在 <code>/source</code> 目录下新建一个名为 <code>uploads</code> 的文件夹，将头像图片（如 <code>avatar.jpg</code>）放入该文件夹中。</li><li>打开主题配置文件 <code>/themes/next/_config.yml</code>，找到 <code>avatar</code> 字段，并修改为以下内容：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  url: /uploads/avatar.jpg  # 头像图片路径</span><br><span class="line">  rounded: true  # 是否显示为圆形头像</span><br></pre></td></tr></table></figure><hr><h3 id="5-2-设置侧边栏社交链接"><a href="#5-2-设置侧边栏社交链接" class="headerlink" title="5.2 设置侧边栏社交链接"></a>5.2 设置侧边栏社交链接</h3><ol><li>编辑站点的 <code>_config.yml</code> 文件，找到 <code>social</code> 字段，添加社交站点名称与链接地址。格式为 <code>显示名称: 链接地址 || 图标类名</code>，例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Social links</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/your-user-name || fab fa-github</span><br><span class="line">  E-Mail: mailto:yourname@gmail.com || fa fa-envelope</span><br><span class="line">  Twitter: https://x.com/your-user-name || fab fa-twitter</span><br><span class="line">  # Weibo: https://weibo.com/yourname || fab fa-weibo</span><br><span class="line">  # Google: https://plus.google.com/yourname || fab fa-google</span><br></pre></td></tr></table></figure><ol><li>打开主题配置文件 <code>/themes/next/_config.yml</code>，在 <code>social_icons</code> 字段下添加社交站点名称与对应的图标类名。<code>enable</code> 选项用于控制是否显示图标，设置为 <code>false</code> 可以隐藏图标。例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">social_icons:</span><br><span class="line">  enable: true  # 是否显示图标</span><br><span class="line">  GitHub: github  # GitHub 图标</span><br><span class="line">  Twitter: twitter  # Twitter 图标</span><br></pre></td></tr></table></figure><h3 id="5-3-设置侧边栏友情链接"><a href="#5-3-设置侧边栏友情链接" class="headerlink" title="5.3 设置侧边栏友情链接"></a>5.3 设置侧边栏友情链接</h3><ol><li>打开站点的 <code>_config.yml</code> 文件，找到 <code>links</code> 字段，添加友情链接的名称与地址。格式为 <code>显示名称: 链接地址</code>，例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 友情链接</span><br><span class="line">links:</span><br><span class="line">  webfem: https://webfem.com  # 示例链接</span><br><span class="line">  Hexo: https://hexo.io  # Hexo 官网</span><br><span class="line">  GitHub: https://github.com  # GitHub 官网</span><br></pre></td></tr></table></figure><ol><li>打开主题配置文件 <code>/themes/next/_config.yml</code>，找到 <code>links_icon</code> 字段，设置是否显示友情链接的图标。例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">links_icon: true  # 是否显示友情链接图标</span><br></pre></td></tr></table></figure><ol><li>如果需要自定义友情链接的图标，可以在 <code>links_settings</code> 字段下添加对应的图标类名。例如：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls</span><br><span class="line">links_settings:</span><br><span class="line">  icon: fa fa-link</span><br><span class="line">  title: 友情链接</span><br><span class="line">  # Available values: block | inline</span><br><span class="line">  layout: block</span><br></pre></td></tr></table></figure><p><img src="https://cdn.webfem.com/webfem/55694f10-d192-11ef-aad8-11241f379ea9" alt="hexo-blog-total.png"></p><h1 id="服务端部署"><a href="#服务端部署" class="headerlink" title="服务端部署"></a>服务端部署</h1><ol><li>将本地代码发布到服务器上，推荐通过github发布</li><li>利用 PM2 执行如下代码即可</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start &quot;hexo server&quot; --name &quot;hexo-blog&quot;</span><br></pre></td></tr></table></figure><p>后续更新文章，需要在本地写完之后，再推送到服务器</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;本地搭建&quot;&gt;&lt;a href=&quot;#本地搭建&quot; class=&quot;headerlink&quot; title=&quot;本地搭建&quot;&gt;&lt;/a&gt;本地搭建&lt;/h1&gt;&lt;h2 id=&quot;1-本地搭建-Hexo-博客&quot;&gt;&lt;a href=&quot;#1-本地搭建-Hexo-博客&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hello myblog</title>
    <link href="https://github.com/Chalice-faith/2025/09/21/hello-myblog/"/>
    <id>https://github.com/Chalice-faith/2025/09/21/hello-myblog/</id>
    <published>2025-09-21T11:31:50.000Z</published>
    <updated>2025-09-21T12:32:10.339Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用hexo搭建个人博客"><a href="#使用hexo搭建个人博客" class="headerlink" title="使用hexo搭建个人博客"></a><strong>使用hexo搭建个人博客</strong></h1><p>本文讲述如何用<code>hexo</code>搭建个人博客，并托管到<code>github</code>。不需要租赁服务器，可完成网站博客的搭建</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装hexo之前，要先下载安装Node.js和Git，百度搜索找到下载即可。<br><a href="https://git-scm.com/downloads">Git下载地址</a><br><a href="https://nodejs.org/en/">Node.js下载地址</a><br>在本地建立一个文件夹，我的文件夹为D:github&#x2F;hexotest。<br>接下来可以进入这个文件夹右键Git Bash 或者通过命令号cmd进入这个文件夹<br>输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g </span><br><span class="line">#初始化网站  </span><br><span class="line">hexo init    </span><br><span class="line">npm install</span><br><span class="line">#生成或 hexo generate      </span><br><span class="line">hexo g</span><br><span class="line">#启动本地服务器 </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>效果如下所示：</p><p>npm install hexo-cli -g</p><p><img src="https://cdn.llfc.club/25lnvXEhOtQuZClsE5Uwh9j8Um7.png" alt="https:&#x2F;&#x2F;cdn.llfc.club&#x2F;25lnvXEhOtQuZClsE5Uwh9j8Um7.png"></p><p>npm install 安装hexo</p><p><img src="https://cdn.llfc.club/25lnzBCIiI0UB1mBbj3Vwkbz3Qx.png" alt="https:&#x2F;&#x2F;cdn.llfc.club&#x2F;25lnzBCIiI0UB1mBbj3Vwkbz3Qx.png"></p><p>hexo g 生成文章</p><p><img src="https://cdn.llfc.club/25lo3iiLFGmZhjQWJMgrqivLAUX.png" alt="https:&#x2F;&#x2F;cdn.llfc.club&#x2F;25lo3iiLFGmZhjQWJMgrqivLAUX.png"></p><p>hexo s 启动服务</p><p><img src="https://cdn.llfc.club/25lo8nTyLr7dpbBiE3bXkHZPLpV.png" alt="https:&#x2F;&#x2F;cdn.llfc.club&#x2F;25lo8nTyLr7dpbBiE3bXkHZPLpV.png"></p><p>通过<a href="http://localhost:4000/">http://localhost:4000</a> 查看效果<br>如果无法显示，那么可能是端口被占用<br>hexo server -p 6666<br>指定端口启动，可看到网页了</p><p><img src="https://cdn.llfc.club/25loF3mbghNlxUJuD6hErtQaina.png" alt="https:&#x2F;&#x2F;cdn.llfc.club&#x2F;25loF3mbghNlxUJuD6hErtQaina.png"></p><p>默认主题为landscape，比较简陋，可以自己下载喜欢的主题，将下载的主题放到themes文件夹下，并且修改_config.yml可以实现主题的替换。<br>重启:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="创建文章和页面"><a href="#创建文章和页面" class="headerlink" title="创建文章和页面"></a><code>创建文章和页面</code></h2><p>创建文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名&quot;</span><br></pre></td></tr></table></figure><p>创建页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;页面名&quot;</span><br></pre></td></tr></table></figure><p>命令常用简写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>目前就可以写一写文章，并且启动hexo生成和运行，本地博客搭建完成了。下面将github和本地的hexo部署联合起来，实现远程的访问和托管。</p><h2 id="github建立博客仓库和配置"><a href="#github建立博客仓库和配置" class="headerlink" title="github建立博客仓库和配置"></a><code>github建立博客仓库和配置</code></h2><p>在Github首页右上角点击 New repositor创建一个仓库. 注意仓库名字要为:你的用户名.github.io</p><h3 id="开启github-pages服务"><a href="#开启github-pages服务" class="headerlink" title="开启github pages服务"></a><code>开启github pages服务</code></h3><p>仓库创建完后可以点击settings设置开启pages服务</p><p>设置pages(如果命名方式为上面所述github会自动打开page服务)</p><p>点击选择主题 choose themes</p><p>目前博客github仓库的创建和配置完成，如果以后购买了域名，可以将github pages 地址绑定为购买的域名即可。</p><h2 id="将hexo-和github-关联起来"><a href="#将hexo-和github-关联起来" class="headerlink" title="将hexo 和github 关联起来"></a><code>将hexo 和github 关联起来</code></h2><p>还是编辑根目录下_config.yml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@github.com:xxx/xxx.github.io.git  #这里的网址填你自己的</span><br><span class="line">    branch: master</span><br><span class="line">```   </span><br><span class="line">保存后需要提前安装一个扩展：</span><br><span class="line">``` cmd</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装该扩展主要是为了支持hexo d 命令。</p><p><code>接下来就是将Hexo部署到我们的Github仓库上</code>:<br>命令行输入 hexo d 会自动将当前的博文生成html并且发布到github进行托管，在浏览器输入 secondtonone1.github.io (secondtonone1用户名替换为你自己的)即可浏览自己的博客了。这样就完成了github和hexo的关联部署。值得改进的地方是，每次调用hexo d 上传到github，都会提示输入github的用户名和密码，非常不方便<br>可以通过SSH keys的设置，达到不输入密码直接发布的目的。</p><h2 id="SSH-keys的配置"><a href="#SSH-keys的配置" class="headerlink" title="SSH keys的配置"></a><code>SSH keys的配置</code></h2><p>在Git 命令行输入如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</span><br></pre></td></tr></table></figure><p><a href="mailto:&#120;&#x78;&#120;&#x40;&#x78;&#x78;&#120;&#46;&#x63;&#x6f;&#109;">xxx@xxx.com</a>替换为你的github邮件地址<br>Git显示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&amp;lt;回车&amp;gt;</span><br></pre></td></tr></table></figure><p>系统会要求你输入密码，这里设置的密码主要是在你提交Git时弹出密码认证，不想输入直接回车</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):&amp;lt;输入加密串&amp;gt;</span><br><span class="line">Enter same passphrase again:&amp;lt;再次输入加密串&amp;gt;</span><br></pre></td></tr></table></figure><h3 id="配置ssh和github仓库"><a href="#配置ssh和github仓库" class="headerlink" title="配置ssh和github仓库"></a><code>配置ssh和github仓库</code></h3><p>找到id_rsa.pub 并复制文件内容<br>id_rsa.pub文件一般位于电脑用户配置文件夹下的一个.ssh文件下C:Users你的用户名.ssh<br>登录Github并添加密钥<br>进入github首页在右上角选择settings设置。</p><h3 id="测试通过git-bash链接到Git"><a href="#测试通过git-bash链接到Git" class="headerlink" title="测试通过git bash链接到Git"></a><code>测试通过git bash链接到Git</code></h3><p>链接Git</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>提示如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yes</span><br><span class="line">The authenticity of host &#x27;github.com (207.65.227.44)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:42:18:60:1d:7b:13:d2:b5:c4:20:7e:56:86:d8:71:f3</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br><span class="line">以下为成功链接到Git</span><br><span class="line"></span><br><span class="line">Hi XXXX! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>以后每次提交博文到github就不需要输入密码了，很方便。配置好后清除之前的记录，重新生成并提交，可以登录自己的github仓库地址(<a href="mailto:&#x73;&#x65;&#x63;&#x6f;&#110;&#100;&#116;&#x6f;&#x6e;&#x6f;&#x6e;&#101;&#49;&#64;&#49;&#x36;&#51;&#46;&#99;&#111;&#109;">secondtonone1@163.com</a>)查看博文了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="让你的博文添加图片"><a href="#让你的博文添加图片" class="headerlink" title="让你的博文添加图片"></a>让你的博文添加图片</h2><p>1 把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true</p><p>2 在你的hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件</p><p>3 等待一小段时间后，再运行hexo n “xxxx”来生成md博文时，&#x2F;source&#x2F;_posts文件夹内除了xxxx.md文件还有一个同名的文件夹</p><h2 id="通过branch实现博客的备份和发布"><a href="#通过branch实现博客的备份和发布" class="headerlink" title="通过branch实现博客的备份和发布"></a>通过branch实现博客的备份和发布</h2><p>可以通过github 的branch进行数据备份，master 用来发布。</p><h2 id="为你的hexo添加css插件和一些扩充插件"><a href="#为你的hexo添加css插件和一些扩充插件" class="headerlink" title="为你的hexo添加css插件和一些扩充插件"></a>为你的hexo添加css插件和一些扩充插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-renderer-sass --save </span><br><span class="line">$ npm install hexo-generator-json-content --save </span><br><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>其他的一些扩充功能，比如留言板，访客记录，赞赏之类的自己去扩充和学习吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用hexo搭建个人博客&quot;&gt;&lt;a href=&quot;#使用hexo搭建个人博客&quot; class=&quot;headerlink&quot; title=&quot;使用hexo搭建个人博客&quot;&gt;&lt;/a&gt;&lt;strong&gt;使用hexo搭建个人博客&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;本文讲述如何用&lt;code&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/Chalice-faith/2025/09/21/hello-world/"/>
    <id>https://github.com/Chalice-faith/2025/09/21/hello-world/</id>
    <published>2025-09-21T10:27:17.111Z</published>
    <updated>2025-09-21T10:27:17.111Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
