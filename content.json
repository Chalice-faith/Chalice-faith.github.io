{"meta":{"title":"Chalice的个人博客","subtitle":"","description":"一个cpper的技术分享站","author":"Chalice","url":"https://github.com/Chalice-faith","root":"/Chalice-faith/"},"pages":[],"posts":[{"title":"hexo博客的搭建","slug":"hexo博客的搭建","date":"2025-09-22T14:41:46.000Z","updated":"2025-09-22T14:42:11.364Z","comments":true,"path":"2025/09/22/hexo博客的搭建/","permalink":"https://github.com/Chalice-faith/2025/09/22/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/","excerpt":"","text":"本地搭建1. 本地搭建 Hexo 博客 全局安装 hexo 脚手架 1npm install -g hexo-cli 新建文件夹 blog，利用脚手架生成博客工程 123mkdir blogcd bloghexo init 安装依赖，运行项目 12npm ihexo server 之后，访问 localhost:4000 就能看到我们的博客。 到目前为止，我们的简易博客就搭建完成了，但是整个博客功能比较简单，我们再来了解一下其他的个性化配置。 2. 个性化配置2.1 更换主题Hexo 主题列表可以在官方查找 https://hexo.io/themes/ 也可以在 github 上查找 https://github.com/search?q=hexo-theme 推荐几个优秀主题 主题 github地址 简介 github star（25.1） NexT https://github.com/theme-next/hexo-theme-next NexT 是 Hexo 最受欢迎的主题之一，设计简洁且功能强大 8.2k Butterfly https://github.com/jerryc127/hexo-theme-butterfly Butterfly 是一个优雅且高度可定制的主题，适合个人博客 7.4k Matery https://github.com/blinkfox/hexo-theme-matery Matery 是一个 Material Design 风格的主题，适合技术博客 5.3k Yilia https://github.com/litten/hexo-theme-yilia Yilia 是一个简洁且响应式的主题，适合写作和阅读 8.4k Icarus https://github.com/ppoffice/hexo-theme-icarus Icarus 是一个现代化的主题，支持多种插件和自定义配置 6.4k 安装主题以 NexT 主题为例，安装步骤如下： 下载主题： 在博客根目录下运行： 1git clone https://github.com/theme-next/hexo-theme-next themes/next 启用主题： 编辑博客根目录下的 _config.yml 文件，修改 theme 字段： 1theme: next 配置主题： 根据需要编辑主题配置文件（通常是 themes/next/_config.yml）。NexT提供了三种不同的外观，可以挑选一个自己喜欢的，然后去掉其中一个的 # 号 12345# Schemes#scheme: Musescheme: Mist#scheme: Pisces#scheme: Gemini 重新生成并部署： 123456# 清除缓存hexo clean# 生成主题静态文件hexo generate# 启动服务hexo server 2.2 更新博客基础信息博客基础信息可以在根目录的 _config.yml 文件配置，以本博客为例，更改如下 12345678# Sitetitle: webfemsubtitle: &#x27;&#x27;description: 做有价值的博客keywords: 前端author: spacelanguage: zh-Hanstimezone: &#x27;&#x27; 2.3 首页文章截断 每次写文章正文时，只需要在文章 .md 中需要截断的地方增加： 1&lt;!--more--&gt; 打开 /themes/next/_config.yml，修改 scroll_to_more 这个选项设置为 false 。 2.4 修改博客 icon浏览器左上角icon修改 在 /source 目录下新建一个名为 uploads 的文件夹，将头像图片（如 favicon.png）放入该文件夹中。 打开主题的配置文件（通常是 /themes/next/_config.yml），找到 favicon 相关字段，修改为你的图标文件路径。例如： 12345favicon: small: /uploads/favicon.png # 小图标（16x16） medium: /uploads/favicon.png # 中图标（32x32） apple_touch_icon: /uploads/favicon.png # Apple 设备图标 safari_pinned_tab: /uploads/favicon.png # Safari 固定标签页图标 3. 修改导航页面的导航需要到具体的主题目录去修改，以next为例，需要到 &#x2F;themes&#x2F;next&#x2F;_config.yml文件，将menu字段修改为 123456menu: home: / || fa fa-home about: /about/ || fa fa-user tags: /tags/ || fa fa-tags categories: /categories/ || fa fa-th archives: /archives/ || fa fa-archive 修改之后，我们还没有这个页面，需要手动加几个页面 3.1 创建分类页面 使用以下命令新建一个名为 categories 的页面： 1hexo new page categories 编辑刚创建的页面文件 /source/categories/index.md，将页面类型设置为 categories。这样，主题会自动在该页面显示所有分类。注意保留冒号后的空格。 123456---title: Categoriesdate: 2024-04-10 23:40:31type: &quot;categories&quot;comments: false--- 3.2 创建标签云页面 使用以下命令新建一个名为 tags 的页面： 1hexo new page &quot;tags&quot; 编辑刚创建的页面文件，将页面类型设置为 tags。这样，主题会自动在该页面显示标签云。 123456---title: Tagsdate: 2024-04-10 23:41:25type: &quot;tags&quot;comments: false--- 3.3 创建“关于我”页面 使用以下命令新建一个名为 about 的页面： 1hexo new page &quot;about&quot; 编辑刚创建的页面文件，可以在正文部分使用 Markdown 格式写下你的个人信息。 1234567---title: Aboutdate: 2024-04-10 23:41:56comments: false---这是我博客的内容，欢迎阅读！ 修改之后效果如下： 4. 创建并编辑文章 在博客根目录下执行以下命令，创建一篇新文章： 1hexo new &quot;我的第一篇文章&quot; 这会在 source/_posts 文件夹内生成一个 .md 文件。 编辑该文件，修改起始字段如下： 123456789101112---title: 文章的标题date: 创建日期 （文件的创建日期）updated: 修改日期 （文件的修改日期）comments: true # 是否开启评论tags: - 标签1 - 标签2categories: - 分类1permalink: url中的名字（文件名）--- 在 --- 下方编写正文内容，遵循 Markdown 语法规则。 生成静态资源 1hexo g 将 hello-word.md 的内容复制过来，效果如下 5. 设置侧边栏默认侧边栏非常简陋，需要再额外配置一下 5.1 设置侧边栏头像 在 /source 目录下新建一个名为 uploads 的文件夹，将头像图片（如 avatar.jpg）放入该文件夹中。 打开主题配置文件 /themes/next/_config.yml，找到 avatar 字段，并修改为以下内容： 123avatar: url: /uploads/avatar.jpg # 头像图片路径 rounded: true # 是否显示为圆形头像 5.2 设置侧边栏社交链接 编辑站点的 _config.yml 文件，找到 social 字段，添加社交站点名称与链接地址。格式为 显示名称: 链接地址 || 图标类名，例如： 1234567# Social linkssocial: GitHub: https://github.com/your-user-name || fab fa-github E-Mail: mailto:yourname@gmail.com || fa fa-envelope Twitter: https://x.com/your-user-name || fab fa-twitter # Weibo: https://weibo.com/yourname || fab fa-weibo # Google: https://plus.google.com/yourname || fab fa-google 打开主题配置文件 /themes/next/_config.yml，在 social_icons 字段下添加社交站点名称与对应的图标类名。enable 选项用于控制是否显示图标，设置为 false 可以隐藏图标。例如： 1234social_icons: enable: true # 是否显示图标 GitHub: github # GitHub 图标 Twitter: twitter # Twitter 图标 5.3 设置侧边栏友情链接 打开站点的 _config.yml 文件，找到 links 字段，添加友情链接的名称与地址。格式为 显示名称: 链接地址，例如： 12345# 友情链接links: webfem: https://webfem.com # 示例链接 Hexo: https://hexo.io # Hexo 官网 GitHub: https://github.com # GitHub 官网 打开主题配置文件 /themes/next/_config.yml，找到 links_icon 字段，设置是否显示友情链接的图标。例如： 1links_icon: true # 是否显示友情链接图标 如果需要自定义友情链接的图标，可以在 links_settings 字段下添加对应的图标类名。例如： 123456# Blog rollslinks_settings: icon: fa fa-link title: 友情链接 # Available values: block | inline layout: block 服务端部署 将本地代码发布到服务器上，推荐通过github发布 利用 PM2 执行如下代码即可 1pm2 start &quot;hexo server&quot; --name &quot;hexo-blog&quot; 后续更新文章，需要在本地写完之后，再推送到服务器","categories":[],"tags":[]},{"title":"hello myblog","slug":"hello-myblog","date":"2025-09-21T11:31:50.000Z","updated":"2025-09-21T12:32:10.339Z","comments":true,"path":"2025/09/21/hello-myblog/","permalink":"https://github.com/Chalice-faith/2025/09/21/hello-myblog/","excerpt":"","text":"使用hexo搭建个人博客本文讲述如何用hexo搭建个人博客，并托管到github。不需要租赁服务器，可完成网站博客的搭建 安装Hexo安装hexo之前，要先下载安装Node.js和Git，百度搜索找到下载即可。Git下载地址Node.js下载地址在本地建立一个文件夹，我的文件夹为D:github&#x2F;hexotest。接下来可以进入这个文件夹右键Git Bash 或者通过命令号cmd进入这个文件夹输入如下命令： 12345678npm install hexo-cli -g #初始化网站 hexo init npm install#生成或 hexo generate hexo g#启动本地服务器 hexo s 效果如下所示： npm install hexo-cli -g npm install 安装hexo hexo g 生成文章 hexo s 启动服务 通过http://localhost:4000 查看效果如果无法显示，那么可能是端口被占用hexo server -p 6666指定端口启动，可看到网页了 默认主题为landscape，比较简陋，可以自己下载喜欢的主题，将下载的主题放到themes文件夹下，并且修改_config.yml可以实现主题的替换。重启: 12hexo ghexo s 创建文章和页面创建文章 1hexo new &quot;文章名&quot; 创建页面 1hexo new page &quot;页面名&quot; 命令常用简写 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 目前就可以写一写文章，并且启动hexo生成和运行，本地博客搭建完成了。下面将github和本地的hexo部署联合起来，实现远程的访问和托管。 github建立博客仓库和配置在Github首页右上角点击 New repositor创建一个仓库. 注意仓库名字要为:你的用户名.github.io 开启github pages服务仓库创建完后可以点击settings设置开启pages服务 设置pages(如果命名方式为上面所述github会自动打开page服务) 点击选择主题 choose themes 目前博客github仓库的创建和配置完成，如果以后购买了域名，可以将github pages 地址绑定为购买的域名即可。 将hexo 和github 关联起来还是编辑根目录下_config.yml文件 12345678deploy: type: git repo: git@github.com:xxx/xxx.github.io.git #这里的网址填你自己的 branch: master``` 保存后需要提前安装一个扩展：``` cmdnpm install hexo-deployer-git --save 安装该扩展主要是为了支持hexo d 命令。 接下来就是将Hexo部署到我们的Github仓库上:命令行输入 hexo d 会自动将当前的博文生成html并且发布到github进行托管，在浏览器输入 secondtonone1.github.io (secondtonone1用户名替换为你自己的)即可浏览自己的博客了。这样就完成了github和hexo的关联部署。值得改进的地方是，每次调用hexo d 上传到github，都会提示输入github的用户名和密码，非常不方便可以通过SSH keys的设置，达到不输入密码直接发布的目的。 SSH keys的配置在Git 命令行输入如下命令： 1$ ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot; xxx@xxx.com替换为你的github邮件地址Git显示： 123$ ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&amp;lt;回车&amp;gt; 系统会要求你输入密码，这里设置的密码主要是在你提交Git时弹出密码认证，不想输入直接回车 12Enter passphrase (empty for no passphrase):&amp;lt;输入加密串&amp;gt;Enter same passphrase again:&amp;lt;再次输入加密串&amp;gt; 配置ssh和github仓库找到id_rsa.pub 并复制文件内容id_rsa.pub文件一般位于电脑用户配置文件夹下的一个.ssh文件下C:Users你的用户名.ssh登录Github并添加密钥进入github首页在右上角选择settings设置。 测试通过git bash链接到Git链接Git 1$ ssh -T git@github.com 提示如下： 1234567yesThe authenticity of host &#x27;github.com (207.65.227.44)&#x27; can&#x27;t be established.RSA key fingerprint is 16:27:42:18:60:1d:7b:13:d2:b5:c4:20:7e:56:86:d8:71:f3Are you sure you want to continue connecting (yes/no)?以下为成功链接到GitHi XXXX! You&#x27;ve successfully authenticated, but GitHub does not provide shell access. 以后每次提交博文到github就不需要输入密码了，很方便。配置好后清除之前的记录，重新生成并提交，可以登录自己的github仓库地址(secondtonone1@163.com)查看博文了 123hexo cleanhexo ghexo d 让你的博文添加图片1 把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true 2 在你的hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件 3 等待一小段时间后，再运行hexo n “xxxx”来生成md博文时，&#x2F;source&#x2F;_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 通过branch实现博客的备份和发布可以通过github 的branch进行数据备份，master 用来发布。 为你的hexo添加css插件和一些扩充插件123$ npm install hexo-renderer-sass --save $ npm install hexo-generator-json-content --save $ npm install hexo-generator-feed --save 其他的一些扩充功能，比如留言板，访客记录，赞赏之类的自己去扩充和学习吧。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2025-09-21T10:27:17.111Z","updated":"2025-09-21T10:27:17.111Z","comments":true,"path":"2025/09/21/hello-world/","permalink":"https://github.com/Chalice-faith/2025/09/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}