{"meta":{"title":"Chalice的个人博客","subtitle":"","description":"一个cpper的技术分享站","author":"Chalice","url":"https://github.com/Chalice-faith","root":"/Chalice-faith/"},"pages":[],"posts":[{"title":"hello myblog","slug":"hello-myblog","date":"2025-09-21T11:31:50.000Z","updated":"2025-09-21T12:32:10.339Z","comments":true,"path":"2025/09/21/hello-myblog/","permalink":"https://github.com/Chalice-faith/2025/09/21/hello-myblog/","excerpt":"","text":"使用hexo搭建个人博客本文讲述如何用hexo搭建个人博客，并托管到github。不需要租赁服务器，可完成网站博客的搭建 安装Hexo安装hexo之前，要先下载安装Node.js和Git，百度搜索找到下载即可。Git下载地址Node.js下载地址在本地建立一个文件夹，我的文件夹为D:github&#x2F;hexotest。接下来可以进入这个文件夹右键Git Bash 或者通过命令号cmd进入这个文件夹输入如下命令： 12345678npm install hexo-cli -g #初始化网站 hexo init npm install#生成或 hexo generate hexo g#启动本地服务器 hexo s 效果如下所示： npm install hexo-cli -g npm install 安装hexo hexo g 生成文章 hexo s 启动服务 通过http://localhost:4000 查看效果如果无法显示，那么可能是端口被占用hexo server -p 6666指定端口启动，可看到网页了 默认主题为landscape，比较简陋，可以自己下载喜欢的主题，将下载的主题放到themes文件夹下，并且修改_config.yml可以实现主题的替换。重启: 12hexo ghexo s 创建文章和页面创建文章 1hexo new &quot;文章名&quot; 创建页面 1hexo new page &quot;页面名&quot; 命令常用简写 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 目前就可以写一写文章，并且启动hexo生成和运行，本地博客搭建完成了。下面将github和本地的hexo部署联合起来，实现远程的访问和托管。 github建立博客仓库和配置在Github首页右上角点击 New repositor创建一个仓库. 注意仓库名字要为:你的用户名.github.io 开启github pages服务仓库创建完后可以点击settings设置开启pages服务 设置pages(如果命名方式为上面所述github会自动打开page服务) 点击选择主题 choose themes 目前博客github仓库的创建和配置完成，如果以后购买了域名，可以将github pages 地址绑定为购买的域名即可。 将hexo 和github 关联起来还是编辑根目录下_config.yml文件 12345678deploy: type: git repo: git@github.com:xxx/xxx.github.io.git #这里的网址填你自己的 branch: master``` 保存后需要提前安装一个扩展：``` cmdnpm install hexo-deployer-git --save 安装该扩展主要是为了支持hexo d 命令。 接下来就是将Hexo部署到我们的Github仓库上:命令行输入 hexo d 会自动将当前的博文生成html并且发布到github进行托管，在浏览器输入 secondtonone1.github.io (secondtonone1用户名替换为你自己的)即可浏览自己的博客了。这样就完成了github和hexo的关联部署。值得改进的地方是，每次调用hexo d 上传到github，都会提示输入github的用户名和密码，非常不方便可以通过SSH keys的设置，达到不输入密码直接发布的目的。 SSH keys的配置在Git 命令行输入如下命令： 1$ ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot; xxx@xxx.com替换为你的github邮件地址Git显示： 123$ ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&amp;lt;回车&amp;gt; 系统会要求你输入密码，这里设置的密码主要是在你提交Git时弹出密码认证，不想输入直接回车 12Enter passphrase (empty for no passphrase):&amp;lt;输入加密串&amp;gt;Enter same passphrase again:&amp;lt;再次输入加密串&amp;gt; 配置ssh和github仓库找到id_rsa.pub 并复制文件内容id_rsa.pub文件一般位于电脑用户配置文件夹下的一个.ssh文件下C:Users你的用户名.ssh登录Github并添加密钥进入github首页在右上角选择settings设置。 测试通过git bash链接到Git链接Git 1$ ssh -T git@github.com 提示如下： 1234567yesThe authenticity of host &#x27;github.com (207.65.227.44)&#x27; can&#x27;t be established.RSA key fingerprint is 16:27:42:18:60:1d:7b:13:d2:b5:c4:20:7e:56:86:d8:71:f3Are you sure you want to continue connecting (yes/no)?以下为成功链接到GitHi XXXX! You&#x27;ve successfully authenticated, but GitHub does not provide shell access. 以后每次提交博文到github就不需要输入密码了，很方便。配置好后清除之前的记录，重新生成并提交，可以登录自己的github仓库地址(secondtonone1@163.com)查看博文了 123hexo cleanhexo ghexo d 让你的博文添加图片1 把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true 2 在你的hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件 3 等待一小段时间后，再运行hexo n “xxxx”来生成md博文时，&#x2F;source&#x2F;_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 通过branch实现博客的备份和发布可以通过github 的branch进行数据备份，master 用来发布。 为你的hexo添加css插件和一些扩充插件123$ npm install hexo-renderer-sass --save $ npm install hexo-generator-json-content --save $ npm install hexo-generator-feed --save 其他的一些扩充功能，比如留言板，访客记录，赞赏之类的自己去扩充和学习吧。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2025-09-21T10:27:17.111Z","updated":"2025-09-21T10:27:17.111Z","comments":true,"path":"2025/09/21/hello-world/","permalink":"https://github.com/Chalice-faith/2025/09/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}